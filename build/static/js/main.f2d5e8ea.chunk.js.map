{"version":3,"sources":["_store/actions/stock.actions.ts","components/Search/Search.tsx","components/Header/Header.tsx","components/Chart/Chart.tsx","App.tsx","serviceWorker.ts","api/interceptor.ts","_store/reducers/stock.reducers.ts","_store/index.ts","_store/effects/stock.effects.ts","_store/services/stock.services.ts","index.tsx"],"names":["GetTickerData","FindTicker","GetTickerIndicators","createActions","Pending","payload","Success","Search","dispatch","useDispatch","useState","showResults","setShowResults","searchResult","useSelector","store","stock","input","useRef","componentNode","handleClickOutside","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","resultsJSX","map","e","key","className","onClick","ticker","type","sub","fromEvent","pipe","a","value","debounceTime","distinctUntilChanged","subscribe","inputString","unsubscribe","onSubmit","preventDefault","ref","placeholder","length","Header","am4core","am4themes_animated","Chart","dataLoaded","loaded","data","collection","chart","am4charts","padding","splice","leftAxesContainer","layout","dateAxis","xAxes","push","renderer","grid","template","location","ticks","strokeOpacity","disabled","minLabelPosition","maxLabelPosition","tooltip","fill","keepSelection","minHeight","labels","groupData","minZoomCount","valueAxis","yAxes","zIndex","baseGrid","height","gridContainer","background","fillOpacity","inside","verticalCenter","fontSize","series","dataFields","dateX","openValueY","valueY","lowValueY","highValueY","clustered","tooltipText","name","defaultState","transitionDuration","riseFromOpenState","properties","dropFromOpenState","stroke","valueAxis2","marginTop","series2","yAxis","columns","groupFields","cursor","lineX","lineY","behavior","dispose","id","style","width","App","Boolean","window","hostname","match","intercept","Axios","interceptors","request","use","config","headers","hasOwnProperty","url","process","error","of","Error","stockReducer","handleActions","state","action","Object","entries","reduce","Close","Number","Date","High","Low","Open","Volume","indicators","observableMiddleware","createEpicMiddleware","reducers","combineReducers","createStore","composeWithDevTools","applyMiddleware","run","combineEpics","actions$","ofType","switchMap","get","catchError","search","bestMatches","t","zip","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f2d5e8ea.chunk.js","sourcesContent":["import { createActions } from 'redux-actions';\nimport { ISearchTicker, ITickerData } from '../interfaces/stock.interfaces';\n\nexport enum GetTickerData {\n  Pending = '[Pending] Get ticker data',\n  Success = '[Success] Get ticker data'\n}\n\nexport enum FindTicker {\n  Pending = '[Pending] Find ticker',\n  Success = '[Success] Find ticker'\n}\n\nexport enum GetTickerIndicators {\n  Pending = '[Pending] Get ticker indicators',\n  Success = '[Success] Get ticker indicators'\n}\n\ncreateActions({\n  [GetTickerData.Pending]: (payload: string) => payload,\n  [GetTickerData.Success]: (payload: { ticker: ITickerData }) => payload,\n\n  [GetTickerIndicators.Pending]: (payload: string) => payload,\n  [GetTickerIndicators.Success]: (payload: { indicators: any[] }) => payload,\n\n  [FindTicker.Pending]: (payload: string) => payload,\n  [FindTicker.Success]: (payload: { searchResult: ISearchTicker[] }) => payload\n});\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './Search.scss';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\nimport { FindTicker, GetTickerData, GetTickerIndicators } from '../../_store/actions/stock.actions';\nimport { ISearchTicker, IStore } from '../../_store/interfaces/stock.interfaces';\n\nconst Search = () => {\n  const dispatch = useDispatch();\n\n  /** Show results */\n  const [showResults, setShowResults] = useState(false);\n\n  /** Subscribe to store */\n  const searchResult: ISearchTicker[] = useSelector((store: IStore) => store.stock.searchResult);\n\n  /** References */\n  const input = useRef<HTMLInputElement>(null);\n  const componentNode = useRef<HTMLInputElement>(null);\n\n  /** Search for tickers */\n  const onSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n  };\n\n  /** Get ticker data */\n  const getTickerData = (ticker: string) => {\n    dispatch({ type: GetTickerData.Pending, payload: ticker });\n    // dispatch({ type: GetTickerIndicators.Pending, payload: ticker });\n    setShowResults(false);\n  };\n\n  /** Click outside */\n  const handleClickOutside = (event: MouseEvent) => {\n    if (componentNode.current && componentNode.current.contains(event.target as HTMLDivElement)) {\n      return;\n    }\n\n    setShowResults(false);\n  };\n\n  /** Click outside handler */\n  useEffect(() => {\n    if (showResults) {\n      document.addEventListener('click', handleClickOutside);\n    }\n\n    return () => document.removeEventListener('click', handleClickOutside);\n  }, [showResults]);\n\n  /** Results JSX */\n  const resultsJSX = searchResult.map((e) =>\n    <div key={e['1. symbol']} className='search__item' onClick={() => getTickerData(e['1. symbol'])}>\n      <div className='search__item-row'>\n        <span className='search__name'>{e['2. name']}</span>\n        <span className='search__flag'>{e['4. region']}</span>\n      </div>\n      <div className='search__item-row'>\n        <span className='search__ticker'>{e['1. symbol']}</span>\n      </div>\n    </div>);\n\n  /** Поиск по атрибуту/навыку */\n  useEffect(() => {\n    const sub = fromEvent(input.current as HTMLInputElement, 'keyup')\n      .pipe(\n        map((a: Event) => (a.target as HTMLInputElement).value),\n        debounceTime(200),\n        distinctUntilChanged()\n      )\n      .subscribe((inputString: string) => {\n        dispatch({ type: FindTicker.Pending, payload: inputString });\n        setShowResults(true);\n      });\n    return () => sub.unsubscribe();\n  }, [dispatch]);\n\n  return (\n    <form className='stock__search-form' onSubmit={onSubmit}>\n      <input ref={input} type='text' className='stock__search' placeholder='Search...'/>\n      <div className='search__results' ref={componentNode}>\n        {showResults && searchResult.length > 0 && resultsJSX}\n      </div>\n    </form>\n  );\n};\n\nexport default Search;\n","import React from 'react';\nimport './Header.scss';\nimport Search from '../Search/Search';\n\nconst Header = () => {\n  return (\n    <header className='root__header'>\n      <h1 className='header__logo'>Stockr</h1>\n      <div className='header__search'>\n        <Search/>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n\n","import React, { useEffect } from 'react';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4charts from '@amcharts/amcharts4/charts';\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\nimport { useSelector } from 'react-redux';\nimport { IStockData, IStore } from '../../_store/interfaces/stock.interfaces';\n\nam4core.useTheme(am4themes_animated);\n\nconst Chart = () => {\n\n  /** Subscribe to store */\n  const dataLoaded: boolean = useSelector((store: IStore) => store.stock.loaded);\n  const data: IStockData[] = useSelector((store: IStore) => store.stock.collection);\n\n  useEffect(() => {\n      let chart = am4core.create('chartdiv', am4charts.XYChart);\n\n      if (dataLoaded) {\n        // Create chart\n        chart.padding(20, 20, 20, 20);\n\n\n        // Load data\n        chart.data = [...data].splice(0, 30);\n\n        // the following line makes value axes to be arranged vertically.\n        chart.leftAxesContainer.layout = 'vertical';\n\n        // uncomment this line if you want to change order of axes\n        //chart.bottomAxesContainer.reverseOrder = true;\n\n        let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n        dateAxis.renderer.grid.template.location = 0;\n        // @ts-ignore\n        dateAxis.renderer.ticks.template.length = 8;\n        dateAxis.renderer.ticks.template.strokeOpacity = 0.1;\n        dateAxis.renderer.grid.template.disabled = false;\n        dateAxis.renderer.ticks.template.disabled = false;\n        dateAxis.renderer.ticks.template.strokeOpacity = 0.2;\n        dateAxis.renderer.minLabelPosition = 0.01;\n        dateAxis.renderer.maxLabelPosition = 0.99;\n        dateAxis.tooltip.fill = am4core.color('#1e88e5');\n        dateAxis.keepSelection = true;\n        dateAxis.minHeight = 30;\n        dateAxis.renderer.labels.template.fill = am4core.color('#fff');\n\n        dateAxis.groupData = true;\n        dateAxis.minZoomCount = 5;\n\n        // these two lines makes the axis to be initially zoomed-in\n        // dateAxis.start = 0.7;\n        // dateAxis.keepSelection = true;\n\n        let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n        valueAxis.tooltip.disabled = true;\n        valueAxis.zIndex = 1;\n        valueAxis.renderer.baseGrid.disabled = true;\n        // height of axis\n        valueAxis.height = am4core.percent(65);\n\n        valueAxis.renderer.gridContainer.background.fill = am4core.color('transparent');\n        valueAxis.renderer.gridContainer.background.fillOpacity = 0\n        valueAxis.renderer.inside = false;\n        valueAxis.renderer.labels.template.verticalCenter = 'bottom';\n        valueAxis.renderer.labels.template.padding(0, 0, 0, 2);\n        valueAxis.renderer.labels.template.fill = am4core.color('#fff');\n\n        //valueAxis.renderer.maxLabelPosition = 0.95;\n        valueAxis.renderer.fontSize = '0.8em';\n\n        let series = chart.series.push(new am4charts.CandlestickSeries());\n        series.dataFields.dateX = 'Date';\n        series.dataFields.openValueY = 'Open';\n        series.dataFields.valueY = 'Close';\n        series.dataFields.lowValueY = 'Low';\n        series.dataFields.highValueY = 'High';\n        series.clustered = false;\n        series.tooltipText = 'open: {openValueY.value}\\nlow: {lowValueY.value}\\nhigh: {highValueY.value}\\nclose: {valueY.value}';\n        series.name = 'MSFT';\n        series.defaultState.transitionDuration = 0;\n\n        series.riseFromOpenState.properties.fill = am4core.color('#4cb65d');\n        series.dropFromOpenState.properties.fill = am4core.color('#f53d36');\n        series.riseFromOpenState.properties.stroke = am4core.color('#4cb65d');\n        series.dropFromOpenState.properties.stroke = am4core.color('#f53d36');\n\n        let valueAxis2 = chart.yAxes.push(new am4charts.ValueAxis());\n        valueAxis2.tooltip.disabled = true;\n        // height of axis\n        valueAxis2.height = am4core.percent(35);\n        valueAxis2.zIndex = 3;\n        // this makes gap between panels\n        valueAxis2.marginTop = 30;\n        valueAxis2.renderer.baseGrid.disabled = true;\n        valueAxis2.renderer.inside = false;\n        valueAxis2.renderer.labels.template.verticalCenter = 'bottom';\n        valueAxis2.renderer.labels.template.padding(0, 0, 0, 2);\n        valueAxis2.renderer.labels.template.fill = am4core.color('#fff');\n        //valueAxis.renderer.maxLabelPosition = 0.95;\n        valueAxis2.renderer.fontSize = '0.8em';\n\n        valueAxis2.renderer.gridContainer.background.fill = am4core.color('transparent');\n        valueAxis2.renderer.gridContainer.background.fillOpacity = 0;\n\n        let series2 = chart.series.push(new am4charts.ColumnSeries());\n        series2.dataFields.dateX = 'Date';\n        series2.clustered = false;\n        series2.dataFields.valueY = 'Volume';\n        series2.yAxis = valueAxis2;\n        series2.tooltipText = '{valueY.value}';\n        series2.columns.template.fill = am4core.color('#1e88e5');\n        series2.columns.template.stroke = am4core.color('#1e88e5');\n        series2.name = 'Series 2';\n        // volume should be summed\n        series2.groupFields.valueY = 'sum';\n        series2.defaultState.transitionDuration = 0;\n\n        chart.cursor = new am4charts.XYCursor();\n        chart.cursor.lineX.stroke = am4core.color('#ddd');\n        chart.cursor.lineY.stroke = am4core.color('#ddd');\n        chart.cursor.behavior = 'none';\n\n        // let scrollbarX = new am4charts.XYChartScrollbar();\n        //\n        // let sbSeries = chart.series.push(new am4charts.LineSeries());\n        // sbSeries.dataFields.valueY = 'Close';\n        // sbSeries.dataFields.dateX = 'Date';\n        // scrollbarX.series.push(sbSeries);\n        // sbSeries.disabled = true;\n        // scrollbarX.marginBottom = 20;\n        // chart.scrollbarX = scrollbarX;\n        // scrollbarX.scrollbarChart.xAxes.getIndex(0).minHeight = undefined;\n\n\n//       /**\n//        * Set up external controls\n//        */\n//\n// // Date format to be used in input fields\n//       let inputFieldFormat = 'yyyy-MM-dd';\n//\n//       document.getElementById('b1m').addEventListener('click', function () {\n//         resetButtonClass();\n//         let max = dateAxis.groupMax['day1'];\n//         let date = new Date(max);\n//         date.setMonth(date.getMonth() - 1);\n//\n//         dateAxis.zoomToDates(\n//           date,\n//           new Date(max)\n//         );\n//         //this.className = \"amcharts-input amcharts-input-selected\";\n//       });\n//\n//       document.getElementById('b3m').addEventListener('click', function () {\n//         resetButtonClass();\n//         let max = dateAxis.groupMax['day1'];\n//         let date = new Date(max);\n//         date.setMonth(date.getMonth() - 3);\n//\n//         dateAxis.zoomToDates(\n//           date,\n//           new Date(max)\n//         );\n//         //this.className = \"amcharts-input amcharts-input-selected\";\n//       });\n//\n//       document.getElementById('b6m').addEventListener('click', function () {\n//         resetButtonClass();\n//         let max = dateAxis.groupMax['day1'];\n//         let date = new Date(max);\n//         date.setMonth(date.getMonth() - 6);\n//\n//         dateAxis.zoomToDates(\n//           date,\n//           new Date(max)\n//         );\n//         //this.className = \"amcharts-input amcharts-input-selected\";\n//       });\n//\n//       document.getElementById('b1y').addEventListener('click', function () {\n//         resetButtonClass();\n//         let max = dateAxis.groupMax['week1'];\n//         let date = new Date(max);\n//         date.setFullYear(date.getFullYear() - 1);\n//\n//         dateAxis.zoomToDates(\n//           date,\n//           new Date(max)\n//         );\n//         //this.className = \"amcharts-input amcharts-input-selected\";\n//       });\n//\n//       document.getElementById('bytd').addEventListener('click', function () {\n//         resetButtonClass();\n//         let date = new Date(dateAxis.max);\n//         date.setMonth(0, 1);\n//         date.setHours(0, 0, 0, 0);\n//         dateAxis.zoomToDates(date, new Date(dateAxis.max));\n//         //this.className = \"amcharts-input amcharts-input-selected\";\n//       });\n//\n//       document.getElementById('bmax').addEventListener('click', function () {\n//         resetButtonClass();\n//         dateAxis.zoom({ start: 0, end: 1 });\n//         //this.className = \"amcharts-input amcharts-input-selected\";\n//       });\n//\n//       const resetButtonClass = () => {\n//         let selected = document.getElementsByClassName('amcharts-input-selected');\n//         for (var i = 0; i < selected.length; i++) {\n//           selected[i].className = 'amcharts-input';\n//         }\n//       }\n//\n//       dateAxis.events.on('selectionextremeschanged', function () {\n//         updateFields();\n//       });\n//\n//       const updateFields = () => {\n//         let minZoomed = dateAxis.minZoomed + am4core.time.getDuration(dateAxis.mainBaseInterval.timeUnit, dateAxis.mainBaseInterval.count) * 0.5;\n//         (document.getElementById('fromfield') as HTMLInputElement).value = chart.dateFormatter.format(minZoomed, inputFieldFormat);\n//         (document.getElementById('tofield') as HTMLInputElement).value = chart.dateFormatter.format(new Date(dateAxis.maxZoomed), inputFieldFormat);\n//       };\n//\n//       dateAxis.events.on('extremeschanged', updateFields);\n//\n//       let zoomTimeout;\n//       const updateZoom = () => {\n//         if (zoomTimeout) {\n//           clearTimeout(zoomTimeout);\n//         }\n//         zoomTimeout = setTimeout(function () {\n//           resetButtonClass();\n//           let start = (document.getElementById('fromfield') as HTMLInputElement).value;\n//           let end = (document.getElementById('tofield') as HTMLInputElement).value;\n//           if ((start.length < inputFieldFormat.length) || (end.length < inputFieldFormat.length)) {\n//             return;\n//           }\n//           let startDate = chart.dateFormatter.parse(start, inputFieldFormat);\n//           let endDate = chart.dateFormatter.parse(end, inputFieldFormat);\n//\n//           if (startDate && endDate) {\n//             dateAxis.zoomToDates(startDate, endDate);\n//           }\n//         }, 500);\n//       };\n//\n//       document.getElementById('fromfield').addEventListener('keyup', updateZoom);\n//       document.getElementById('tofield').addEventListener('keyup', updateZoom);\n//\n      }\n\n      return () => {\n        if (chart && dataLoaded) {\n          chart.dispose();\n        }\n      }\n    },\n    [dataLoaded, data]\n  );\n\n  return <>\n    {/*<div id=\"controls\" style={{ width: '100%', overflow: 'hidden' }}>*/}\n    {/*  <div style={{ float: 'left', marginLeft: '15px' }}>*/}\n    {/*    From: <input type=\"text\" id=\"fromfield\" className=\"amcharts-input\"/>*/}\n    {/*    To: <input type=\"text\" id=\"tofield\" className=\"amcharts-input\"/>*/}\n    {/*  </div>*/}\n    {/*  <div style={{ float: 'right', marginRight: '15px' }}>*/}\n    {/*    <button id=\"b1m\" className=\"amcharts-input\">1m</button>*/}\n    {/*    <button id=\"b3m\" className=\"amcharts-input\">3m</button>*/}\n    {/*    <button id=\"b6m\" className=\"amcharts-input\">6m</button>*/}\n    {/*    <button id=\"b1y\" className=\"amcharts-input\">1y</button>*/}\n    {/*    <button id=\"bytd\" className=\"amcharts-input\">YTD</button>*/}\n    {/*    <button id=\"bmax\" className=\"amcharts-input\">MAX</button>*/}\n    {/*  </div>*/}\n    {/*</div>*/}\n    <div id=\"chartdiv\" style={{ width: '100%', height: '100%' }}/>\n  </>\n};\n\nexport default Chart;\n","import React from 'react';\nimport './App.scss';\nimport Header from './components/Header/Header';\nimport Chart from './components/Chart/Chart';\n\nconst App: React.FC = () => {\n\n  return (\n    <>\n      <Header/>\n      <main className='root__main'>\n        <Chart/>\n      </main>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import Axios from 'axios-observable';\nimport { AxiosRequestConfig } from 'axios';\nimport { of } from 'rxjs';\n\n/** Interceptors */\n\nconst intercept = () => {\n  Axios.interceptors.request.use(\n    (config: AxiosRequestConfig) => {\n\n      /** Logo data */\n      if (config.headers.hasOwnProperty('logo') && process.env.REACT_APP_LOGO) {\n        config.url = `${process.env.REACT_APP_LOGO}?${config.url}`;\n        return config;\n      }\n\n      /** Stock data */\n      if (process.env.REACT_APP_ALPHAVANTAGE) {\n        config.url = `${process.env.REACT_APP_ALPHAVANTAGE}?${config.url}&apikey=${process.env.REACT_APP_API_KEY}`;\n      }\n\n      return config;\n    },\n    (error) => {\n      return of(new Error(error));\n    }\n  );\n};\n\nexport default intercept;\n","import { handleActions } from 'redux-actions';\nimport { FindTicker, GetTickerData, GetTickerIndicators } from '../actions/stock.actions';\nimport { ISearchTicker, IStockData, IStringMap, ITickerData } from '../interfaces/stock.interfaces';\n\n/** State interface */\nexport interface IStockState {\n  collection: IStockData[];\n  searchResult: ISearchTicker[];\n  indicators: any;\n  loaded: boolean;\n}\n\n/** Payload interface */\nexport interface IStockPayload {\n  payload: {\n    ticker?: IStringMap<ITickerData>,\n    searchResult?: ISearchTicker[],\n    indicators: any[]\n  };\n}\n\n/** Initial state */\nconst initialState: IStockState = {\n  collection: null,\n  loaded: false,\n  searchResult: [],\n  indicators: []\n};\n\nconst stockReducer = handleActions(\n  {\n    [GetTickerData.Success]: (state: IStockState, action: IStockPayload) => {\n      if (action.payload.ticker) {\n\n        return {\n          ...state,\n          loaded: true,\n          collection: Object.entries(action.payload.ticker).reduce((a: IStockData[], e) => {\n            return [...a, {\n              'Adj Close': e[1]['5. adjusted close'],\n              Close: Number(e[1]['4. close']),\n              Date: new Date(e[0]),\n              High: e[1]['2. high'],\n              Low: e[1]['3. low'],\n              Open: Number(e[1]['1. open']),\n              Volume: Number(e[1]['6. volume'])\n            }]\n          }, [])\n        }\n\n      }\n\n      return state;\n    },\n\n    [FindTicker.Success]: (state: IStockState, action: IStockPayload) => {\n      if (action.payload.searchResult) {\n        return {\n          ...state,\n          searchResult: action.payload.searchResult\n        }\n      }\n\n      return state;\n    },\n\n    [GetTickerIndicators.Success]: (state: IStockState, action: IStockPayload) => {\n      if (action.payload.indicators) {\n        return {\n          ...state,\n          indicators: action.payload.indicators\n        }\n      }\n\n      return state;\n    }\n  },\n  initialState\n);\n\nexport default stockReducer;\n","/** Создаем middleware для эффектов (эпиков) */\nimport { combineEpics, createEpicMiddleware } from 'redux-observable';\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport stockReducer from './reducers/stock.reducers';\nimport { FindTicker$, GetTickerData$, GetTickerIndicators$ } from './effects/stock.effects';\n\nconst observableMiddleware = createEpicMiddleware();\n\n/** Регистрируем редьюсеры */\nconst reducers = combineReducers({\n  stock: stockReducer\n});\n\n/** Создаем store */\nexport const store = createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(observableMiddleware))\n);\n\n/** Регистрируем эффекты */\nobservableMiddleware.run(\n  combineEpics(\n    GetTickerData$,\n    FindTicker$,\n    GetTickerIndicators$\n  )\n);\n","/** Fetch ticker data */\nimport { ActionsObservable, ofType } from 'redux-observable';\nimport { Action } from 'redux-actions';\nimport { FindTicker, GetTickerData, GetTickerIndicators } from '../actions/stock.actions';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { findTicker, getTickerData, getTickerIndicators } from '../services/stock.services';\nimport { ISearchTicker, IStockResponse } from '../interfaces/stock.interfaces';\n\nexport const GetTickerData$ = (actions$: ActionsObservable<Action<string>>) =>\n  actions$.pipe(\n    ofType(GetTickerData.Pending),\n    switchMap((action) =>\n      getTickerData(action.payload).pipe(\n        map((data: IStockResponse) => {\n          return { type: GetTickerData.Success, payload: { ticker: data['Time Series (Daily)'] } };\n        }),\n        catchError((e) => of(e))\n      )\n    )\n  );\n\nexport const FindTicker$ = (actions$: ActionsObservable<Action<string>>) =>\n  actions$.pipe(\n    ofType(FindTicker.Pending),\n    switchMap((action) =>\n      findTicker(action.payload).pipe(\n        map((searchResult: ISearchTicker[]) => {\n          return { type: FindTicker.Success, payload: { searchResult } };\n        }),\n        catchError((e) => of(e))\n      )\n    )\n  );\n\nexport const GetTickerIndicators$ = (actions$: ActionsObservable<Action<string>>) =>\n  actions$.pipe(\n    ofType(GetTickerIndicators.Pending),\n    switchMap((action) =>\n      getTickerIndicators(action.payload).pipe(\n        map((indicators) => {\n          return { type: GetTickerIndicators.Success, payload: { indicators } };\n        }),\n        catchError((e) => of(e))\n      )\n    )\n  );\n","/** Стартуем сценарий */\nimport Axios from 'axios-observable';\nimport { map } from 'rxjs/operators';\nimport { zip } from 'rxjs';\n\nexport const findTicker = (search: string) => {\n  return Axios.get(`&function=SYMBOL_SEARCH&keywords=${search}`).pipe(map(({ data }) => data.bestMatches));\n};\n\nexport const getTickerData = (ticker: string) => {\n  return Axios.get(`&function=TIME_SERIES_DAILY_ADJUSTED&symbol=${ticker}&outputsize=compact`).pipe(map(({ data }) => data));\n};\n\nexport const getTickerIndicators = (t: string) => {\n  return zip(\n    Axios.get(`&function=RSI&symbol=${t}&interval=monthly&time_period=30&series_type=open`).pipe(map(({ data }) => data)),\n    Axios.get(`&function=CCI&symbol=${t}&interval=monthly&time_period=30`).pipe(map(({ data }) => data)),\n    Axios.get(`&function=MACD&symbol=${t}&interval=monthly&series_type=open`).pipe(map(({ data }) => data)),\n    Axios.get(`&function=EMA&symbol=${t}&interval=monthly&time_period=30&series_type=open`).pipe(map(({ data }) => data)),\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport intercept from './api/interceptor';\nimport { Provider } from 'react-redux';\nimport { store } from './_store';\n\n/** Connect interceptor */\nintercept();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}